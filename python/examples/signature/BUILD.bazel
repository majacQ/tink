load("@rules_python//python:defs.bzl", "py_binary")
load("@pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:private"])

licenses(["notice"])

exports_files([
    "signature_test_private_keyset.json",
    "signature_test_public_keyset.json",
])

py_binary(
    name = "signature_cli",
    srcs = ["signature_cli.py"],
    python_version = "PY3",
    deps = [
        requirement("absl-py"),
        "@tink_py//tink:secret_key_access",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/signature",
    ],
)

py_library(
    name = "signature_basic",
    srcs = ["signature_basic.py"],
    deps = [
        "@tink_py//tink:secret_key_access",
        "@tink_py//tink:tink_python",
        "@tink_py//tink/signature",
    ],
)

py_test(
    name = "signature_basic_test",
    srcs = ["signature_basic_test.py"],
    python_version = "PY3",
    deps = [
        requirement("absl-py"),
        ":signature_basic",
    ],
)

sh_test(
    name = "signature_test",
    size = "small",
    srcs = ["signature_cli_test.sh"],
    args = [
        "$(rootpath :signature_cli)",
        "$(rootpath :signature_test_private_keyset.json)",
        "$(rootpath :signature_test_public_keyset.json)",
    ],
    data = [
        ":signature_cli",
        ":signature_test_private_keyset.json",
        ":signature_test_public_keyset.json",
    ],
)

# This runs the previous test assuming the Tink python package has been
# installed previously with pip3 install.
sh_test(
    name = "signature_test_package",
    size = "small",
    srcs = ["signature_cli_test.sh"],
    args = [
        "'python3 $(rootpath :signature_cli.py)'",
        "$(rootpath :signature_test_private_keyset.json)",
        "$(rootpath :signature_test_public_keyset.json)",
    ],
    data = [
        ":signature_cli.py",
        ":signature_test_private_keyset.json",
        ":signature_test_public_keyset.json",
    ],
)
