package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "hpke_context",
    srcs = ["hpke_context.cc"],
    hdrs = ["hpke_context.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    visibility = ["//visibility:public"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_util",
        "//util:secret_data",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_context_boringssl",
    srcs = ["hpke_context_boringssl.cc"],
    hdrs = ["hpke_context_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util",
        ":hpke_util_boringssl",
        "//internal:ssl_unique_ptr",
        "//subtle:subtle_util",
        "//util:secret_data",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_decrypt",
    srcs = ["hpke_decrypt.cc"],
    hdrs = ["hpke_decrypt.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_util",
        "//:hybrid_decrypt",
        "//proto:hpke_cc_proto",
        "//util:secret_data",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_decrypt_boringssl",
    srcs = ["hpke_decrypt_boringssl.cc"],
    hdrs = ["hpke_decrypt_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_key_boringssl",
        ":hpke_util_boringssl",
        "//proto:hpke_cc_proto",
        "//subtle:subtle_util",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_encrypt",
    srcs = ["hpke_encrypt.cc"],
    hdrs = ["hpke_encrypt.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_util",
        "//:hybrid_encrypt",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_encrypt_boringssl",
    srcs = ["hpke_encrypt_boringssl.cc"],
    hdrs = ["hpke_encrypt_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util_boringssl",
        "//proto:hpke_cc_proto",
        "//subtle:subtle_util",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_key_boringssl",
    srcs = ["hpke_key_boringssl.cc"],
    hdrs = ["hpke_key_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util_boringssl",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_key_manager_util",
    srcs = ["hpke_key_manager_util.cc"],
    hdrs = ["hpke_key_manager_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:validation",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "hpke_private_key_manager",
    srcs = ["hpke_private_key_manager.cc"],
    hdrs = ["hpke_private_key_manager.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_key_manager_util",
        "//:core/key_type_manager",
        "//:core/private_key_type_manager",
        "//:core/template_util",
        "//:hybrid_decrypt",
        "//:key_manager",
        "//internal:ec_util",
        "//internal:ssl_unique_ptr",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//subtle:common_enums",
        "//util:constants",
        "//util:secret_data",
        "//util:status",
        "//util:statusor",
        "//util:validation",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_public_key_manager",
    srcs = ["hpke_public_key_manager.cc"],
    hdrs = ["hpke_public_key_manager.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt",
        ":hpke_key_manager_util",
        "//:core/key_type_manager",
        "//:core/template_util",
        "//:hybrid_encrypt",
        "//:key_manager",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//util:constants",
        "//util:errors",
        "//util:protobuf_helper",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_test_util",
    testonly = 1,
    srcs = ["hpke_test_util.cc"],
    hdrs = ["hpke_test_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_util",
    srcs = ["hpke_util.cc"],
    hdrs = ["hpke_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        "//internal:ec_util",
        "//proto:hpke_cc_proto",
        "//subtle:common_enums",
        "//util:status",
        "//util:statusor",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_util_boringssl",
    srcs = ["hpke_util_boringssl.cc"],
    hdrs = ["hpke_util_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "test_hpke_context_boringssl",
    testonly = 1,
    srcs = ["test_hpke_context_boringssl.cc"],
    hdrs = ["test_hpke_context_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_util",
        ":hpke_util_boringssl",
        "//internal:ssl_unique_ptr",
        "//util:status",
        "//util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "config_v0",
    srcs = ["config_v0.cc"],
    hdrs = ["config_v0.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_private_key_manager",
        ":hpke_public_key_manager",
        "//:configuration",
        "//hybrid:ecies_aead_hkdf_private_key_manager",
        "//hybrid:ecies_aead_hkdf_public_key_manager",
        "//hybrid:hybrid_decrypt_wrapper",
        "//hybrid:hybrid_encrypt_wrapper",
        "//internal:configuration_impl",
        "//util:status",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "key_gen_config_v0",
    srcs = ["key_gen_config_v0.cc"],
    hdrs = ["key_gen_config_v0.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_private_key_manager",
        ":hpke_public_key_manager",
        "//:key_gen_configuration",
        "//hybrid:ecies_aead_hkdf_private_key_manager",
        "//hybrid:ecies_aead_hkdf_public_key_manager",
        "//internal:key_gen_configuration_impl",
        "//util:status",
        "@com_google_absl//absl/memory",
    ],
)

# tests

cc_test(
    name = "hpke_context_test",
    size = "small",
    srcs = ["hpke_context_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_test_util",
        ":hpke_util",
        "//util:secret_data",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_context_boringssl_test",
    size = "small",
    srcs = ["hpke_context_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_test_util",
        ":hpke_util",
        ":test_hpke_context_boringssl",
        "//util:secret_data",
        "//util:statusor",
        "//util:test_matchers",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_decrypt_boringssl_test",
    size = "small",
    srcs = ["hpke_decrypt_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt_boringssl",
        ":hpke_key_boringssl",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "//util:test_matchers",
        "//util:test_util",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_decrypt_test",
    size = "small",
    srcs = ["hpke_decrypt_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_encrypt",
        ":hpke_test_util",
        "//:hybrid_decrypt",
        "//:hybrid_encrypt",
        "//proto:hpke_cc_proto",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_encrypt_boringssl_test",
    size = "small",
    srcs = ["hpke_encrypt_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt_boringssl",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "//util:test_matchers",
        "//util:test_util",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_encrypt_test",
    size = "small",
    srcs = ["hpke_encrypt_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt",
        ":hpke_test_util",
        ":hpke_util",
        "//:hybrid_encrypt",
        "//proto:hpke_cc_proto",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_key_boringssl_test",
    size = "small",
    srcs = ["hpke_key_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_key_boringssl",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:statusor",
        "//util:test_matchers",
        "//util:test_util",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_key_manager_util_test",
    size = "small",
    srcs = ["hpke_key_manager_util_test.cc"],
    deps = [
        ":hpke_key_manager_util",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//util:status",
        "//util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_private_key_manager_test",
    size = "small",
    srcs = ["hpke_private_key_manager_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt",
        ":hpke_private_key_manager",
        "//:hybrid_decrypt",
        "//:hybrid_encrypt",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//subtle:hybrid_test_util",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_public_key_manager_test",
    size = "small",
    srcs = ["hpke_public_key_manager_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_public_key_manager",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//util:test_matchers",
        "//util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_util_boringssl_test",
    size = "small",
    srcs = ["hpke_util_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_test_util",
        ":hpke_util",
        ":hpke_util_boringssl",
        "//proto:hpke_cc_proto",
        "//util:statusor",
        "//util:test_matchers",
        "//util:test_util",
        "@boringssl//:crypto",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_util_test",
    size = "small",
    srcs = ["hpke_util_test.cc"],
    deps = [
        ":hpke_test_util",
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "config_v0_test",
    srcs = ["config_v0_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":config_v0",
        ":hpke_private_key_manager",
        ":key_gen_config_v0",
        "//:configuration",
        "//:hybrid_decrypt",
        "//:hybrid_encrypt",
        "//:key_gen_configuration",
        "//:keyset_handle",
        "//hybrid:ecies_aead_hkdf_private_key_manager",
        "//hybrid:hybrid_key_templates",
        "//internal:configuration_impl",
        "//internal:key_gen_configuration_impl",
        "//internal:key_type_info_store",
        "//internal:keyset_wrapper_store",
        "//proto:tink_cc_proto",
        "//util:statusor",
        "//util:test_matchers",
        "@com_google_googletest//:gtest_main",
    ],
)
